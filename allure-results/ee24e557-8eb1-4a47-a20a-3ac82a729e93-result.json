{"name": "test_open_link", "status": "failed", "statusDetails": {"message": "AssertionError: Авторизация не удалась!\nassert False\n +  where False = check_successful_authorization()\n +    where check_successful_authorization = <pages.main_page.MainPage object at 0x0000021535C431C0>.check_successful_authorization", "trace": "self = <test_OA_one.TestCase1 object at 0x0000021535C42FB0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4a12bf66a40a3df630a5e569ca1e3259\")>\nlogin_data = ('testbeloveyed@gmail.com', '11luchtest228')\n\n    def test_open_link(self, browser, login_data):\n        email, password = login_data\n        logging.basicConfig(level=logging.INFO)\n        try:\n            # Открываем главную страницу\n            page = MainPage(\n                browser,\n                MainPageLocators.MAIN_LINK\n            )\n            page.open_site()  # Переход на сайт\n    \n            # Открываем новую вкладку для работы с email\n            browser.execute_script(\"window.open('about:blank', '_blank');\")\n            browser.switch_to.window(browser.window_handles[1])  # Переключаемся на новую вкладку\n    \n            # Создаем экземпляр страницы email\n            emailpage = EmailPage(\n                browser,\n                EmailPageLocators.EMAIL_LINK\n            )\n            emailpage.open_site()  # Открываем страницу email\n            emailpage.input_email_login(email)  # Вводим email\n            emailpage.submit_login()  # Отправляем email\n            emailpage.input_password(password)  # Вводим пароль\n            emailpage.submit_pass()  # Отправляем пароль\n    \n            # Возвращаемся на главную страницу\n            browser.switch_to.window(browser.window_handles[0])\n            page.attention_see()  # Проверяем наличие баннера\n            page.open_button_registration()  # Открываем регистрацию\n            page.open_button_email()  # Открываем ввод email\n            page.email_label_input(email)  # Вводим email для регистрации\n    \n            # Возвращаемся на вкладку с email\n            browser.switch_to.window(browser.window_handles[1])\n            confirmation_code = emailpage.read_first_email()\n            browser.close()\n            browser.switch_to.window(browser.window_handles[0])\n    \n            page.input_confirmation_code(confirmation_code)\n            # Проверяем успешность авторизации\n>           assert page.check_successful_authorization(), \"Авторизация не удалась!\"\nE           AssertionError: Авторизация не удалась!\nE           assert False\nE            +  where False = check_successful_authorization()\nE            +    where check_successful_authorization = <pages.main_page.MainPage object at 0x0000021535C431C0>.check_successful_authorization\n\ntest_OA_one.py:57: AssertionError"}, "attachments": [{"name": "log", "source": "0be93bb3-b55a-4e63-b8c4-9814054b4ecb-attachment.txt", "type": "text/plain"}], "start": 1747928635885, "stop": 1747928756043, "uuid": "543daad4-60c1-4cea-b5bb-8781ef30b0ab", "historyId": "90d1cf2200c74f55e7198f16293801a6", "testCaseId": "90d1cf2200c74f55e7198f16293801a6", "fullName": "test_OA_one.TestCase1#test_open_link", "labels": [{"name": "suite", "value": "test_OA_one"}, {"name": "subSuite", "value": "TestCase1"}, {"name": "host", "value": "NB-002176"}, {"name": "thread", "value": "8424-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_OA_one"}]}